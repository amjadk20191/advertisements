"""
Django settings for advertisements project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import openai
import os
from celery.schedules import crontab
import pytz

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#from dotenv import load_dotenv

#load_dotenv()  

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY',"django-insecure-tii7tv&bg#nm-p&6^&-iasr3kncq6rt)dmsdjr%joun67j7*x4")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [os.environ.get('ALLOWED_HOSTS',"*")]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_extensions',
    'rest_framework_simplejwt',
    'corsheaders',
    'Chat',
    'user',
    'dashboard',
    'core',
    'advertiser',
    'payment',

]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
         'advertisements.middleware.JWTAuthentication2',

    ),
    
    
    
    
    # 'DEFAULT_RENDERER_CLASSES': (
    #     'rest_framework.renderers.JSONRenderer',
    # )
    
    
    
 }

CORS_ALLOW_ALL_ORIGINS = True


SIMPLE_JWT = {

    "REFRESH_TOKEN_LIFETIME": timedelta(hours=2),
    "ACCESS_TOKEN_LIFETIME": timedelta(days=3),
    "TOKEN_OBTAIN_SERIALIZER": "core.serializers.TokenObtainPairSerializerNew"
     

}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'advertisements.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'advertisements.wsgi.application'
AUTH_USER_MODEL = 'core.User'



# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.environ.get('DB_HOST'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
    }
}











CELERY_BROKER_URL='redis://redis:6379/1'
CELERY_BEAT_SCHEDULE= {
'dailyTask':{
    'task':'user.tasks.dailyTask',
    'schedule':crontab(hour=2, minute=0),


}


}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
timezone = pytz.timezone('Asia/Riyadh')

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Riyadh'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/



countries={

        "Chad":"تشاد",
        "Somalia":"الصومال",
        "Libya":"ليبيا",
        "Morocco":"المغرب",
        "Sudan":"السودان",
        "Tunisia":"تونس",
        "Oman":"عُمان",
        "Kuwait":"الكويت",
        "Saudi Arabia":"السعودية",
        "Qatar":"قطر",
        "Algeria":"الجزائر",
        "Egypt":"مصر",
        "Bahrain":"البحرين",
        "United Arab Emirates":"الامارات",
        "Palestine, State of":"فلسطين",
        "Iraq":"العراق",
        "Jordan":"الاردن",
        "Lebanon":"لبنان",
        "Yemen":"اليمن",
        "Syrian Arab Republic":"سوريا"
            }

PAYPAL_WEBHOOK_ID=os.environ.get('PAYPAL_WEBHOOK_ID')
CLIENT_ID = os.environ.get('CLIENT_ID')
CLIENT_SECRET=os.environ.get('CLIENT_SECRET')
openai.api_key=os.environ.get('openai')
TokenTelgram=os.environ.get('TokenTelgram')




STATIC_URL = '/static/static_api/'
MEDIA_URL = '/static/media/'
MEDIA_ROOT = '/vol/web/media'
STATIC_ROOT = '/vol/web/static_api'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
